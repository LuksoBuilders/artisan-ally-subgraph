type BotBid @entity {
  id: Bytes!
  amount: BigInt!
  maxPrice: BigInt!
}

type Event @entity {
  id: ID!
  eventType: String!
  feed: Feed!
  post: Post
  creator: User!
  referenceFeed: Bytes
  referencePost: Post
  content: Bytes
  timestamp: BigInt!
  transactionHash: Bytes!
}

type Feed @entity {
  id: Bytes!
  owner: User!
  posts: [Post!]! @derivedFrom(field: "feed")
  postCount: BigInt!
}

type Post @entity {
  id: ID!
  feed: Feed!
  postType: String!
  creator: User!
  referenceFeed: Bytes
  referencePost: Post
  isDeleted: Boolean!
  isStarred: Boolean!
  createdAt: BigInt!
  content: Bytes
  parents: [Post!]!
  replies: [Post!]! @derivedFrom(field: "referencePost")
  repliesCount: BigInt!
  mirrors: [Post!]! @derivedFrom(field: "referencePost")
  mirrorsCount: BigInt!
  tips: [Tip!]! @derivedFrom(field: "post")
}

type Tip @entity {
  id: Bytes!
  tipper: User!
  feed: Feed!
  post: Post!
  amount: BigInt!
}

type Star @entity {
  id: Bytes!
  user: User!
  feed: Feed!
  post: Post!
}

type User @entity {
  id: Bytes!
  fellowships: [Fellowship!]! @derivedFrom(field: "artisan")
  deities: [Deity!]! @derivedFrom(field: "owner")
  whales: [Whale!]! @derivedFrom(field: "owner")
  backerBucks: [BackerBuck!]! @derivedFrom(field: "owner")
  contributions: [Contribution!]! @derivedFrom(field: "contributor")
  endorsements: [Endorsement!]! @derivedFrom(field: "endorser")
  endorseds: [Endorsement!]! @derivedFrom(field: "from")
  holyShitsBalance: BigInt!
  steloBalance: BigInt!
  bid: BotBid
  feed: Feed
  followers: [User!]!
  followerCount: BigInt!
  followings: [User!]!
  followingCount: BigInt!
}

type GlobalVars @entity {
  id: Bytes!
  totalFeeCollected: BigInt!
  totalRaisedAmount: BigInt!
  divineDungDepotBalance: BigInt!
}

type FellowshipPrices @entity {
  id: Bytes!
  initialPrice: BigInt!
  initialGrowthFactor: BigInt!
  eventualGrowthFactor: BigInt!
  diminishingFactor: BigInt!
}

type Fellowship @entity {
  id: Bytes!
  address: Bytes!
  name: String
  symbol: String
  metadata: Bytes
  contributionAddress: Bytes
  contributionAmount: BigInt!
  endorsementAddress: Bytes
  endorsementAmount: BigInt!
  priceGrowth: BigInt
  initialPrice: BigInt
  currentPrice: BigInt
  totalSupply: BigInt!
  backerBucks: [BackerBuck!]! @derivedFrom(field: "fellowship")
  contributions: [Contribution!]! @derivedFrom(field: "fellowship")
  endorsements: [Endorsement!]! @derivedFrom(field: "fellowship")
  founder: Deity
  artisan: User
  raisedAmount: BigInt!
  version: BigInt!
  prices: FellowshipPrices
}

type SystemFeeAtomCollected @entity {
  id: Bytes!
  amount: BigInt!
}

type UnkownEntity @entity {
  id: Bytes!
  number: BigInt!
}

type Deity @entity {
  id: Bytes!
  systemFeeAtomCollected: SystemFeeAtomCollected!
  tokenIdNumber: BigInt!
  metadata: Bytes
  xp: BigInt!
  level: BigInt!
  owner: User!
  withdrawable: BigInt!
  directFee: BigInt!
  harvested: BigInt!
  tier: String!
  slots: [Slot!]! @derivedFrom(field: "deity")
  portfolio: [Fellowship!]! @derivedFrom(field: "founder")
}

type Whale @entity {
  id: Bytes!
  owner: User!
}

type BackerBuck @entity {
  id: Bytes!
  owner: User!
  fellowship: Fellowship!
  amount: BigInt!
  contributions: BigInt!
  purifiable: BigInt!
}

type Contribution @entity {
  id: Bytes!
  contributor: User!
  fellowship: Fellowship!
  amount: BigInt!
  purifiable: BigInt!
}

type Endorsement @entity {
  id: Bytes!
  fellowship: Fellowship!
  endorser: User!
  from: User!
  amount: BigInt!
}

type Slot @entity {
  id: Bytes!
  deity: Deity!
  index: BigInt!
  usedAt: BigInt!
}

type Alert @entity {
  id: Bytes!
  type: String!
  recipient: User!
  payload: [String!]!
  createdAt: String!
}

type FollowEvent @entity {
  id: Bytes!
  eventType: String!
  follower: User!
  following: User!
  timestamp: BigInt!
  transactionHash: Bytes!
}
